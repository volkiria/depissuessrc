name: "Create issue with parameters"
description: "Creates GH Issue with parameter values defined in inputs"

inputs:
    repository:
      description: Github repository where action to be created
      type: string
      required: false
      default: '.'
    access_token:
      description: Github token to use while creating the issue in remote repository. Pass PAT existing oin remote repository
      type: string
      required: false
      default: ${{ github.token }}
    title:
      description: Title to be configured for the issue
      type: string
      required: true
    body:
      description: Body to be configured for the issue
      type: string
      required: true
    labels:
      description: A list of labels to be configured for the issue (coma separated list of existing labels in the target repository)
      type: string
      required: true

runs:
  using: "composite"
  steps:
    - name: Prepare environment
      shell: bash
      run: |
        repo=''
        if [ "${{ inputs.repository }}" != "." ]; 
        then 
          repo="--repo ${{ inputs.repository }}";
        fi
        echo "repo=$repo" >> $GITHUB_ENV
    - run: gh issue create --title "${{ inputs.title }}" --label "${{ inputs.labels }}" --body "${{ inputs.body }}" $repo
      shell: bash
      # name: Create GH Issue
      # shell: bash
      env:
        # GITHUB_TOKEN: ${{ inputs.access_token }}
        GH_TOKEN: ${{ inputs.access_token }}
        # GH_TOKEN: ${{ github.token }}
    # - name: Create GH Action
    #   shell: bash
    #   env:
    #     GITHUB_TOKEN: ${{ inputs.access_token }}
    #     # GH_TOKEN: ${{ github.token }}
    #   run: |
    #     repo=''
    #     label=''
    #     if [ "${{ inputs.repository }}" != "." ]; 
    #     then 
    #       repo="--repo ${{ inputs.repository }}";
    #       unset GH_TOKEN
    #       gh auth login --with-token ${{ inputs.access_token }}
    #     fi
    #     echo gh issue create --title "${{ inputs.title }}" --label "${{ inputs.labels }}" --body "${{ inputs.body }}" $repo
    #     gh issue create --title "${{ inputs.title }}" --label "${{ inputs.labels }}" --body "${{ inputs.body }}" $repo
